name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black
        
    - name: Lint with flake8
      run: |
        # 停止构建如果有Python语法错误或未定义的名称
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # 退出零处理所有错误为警告。GitHub编辑器是127个字符宽
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Check code formatting with black
      run: |
        black --check --diff .
        
    - name: Create test directories
      run: |
        mkdir -p logs
        mkdir -p reports
        mkdir -p models
        mkdir -p tests
        
    - name: Run tests
      run: |
        # 如果有测试文件就运行测试
        if [ -d "tests" ] && [ "$(ls -A tests)" ]; then
          pytest tests/ --cov=app --cov=scripts --cov-report=xml --cov-report=html
        else
          echo "No tests found, skipping test execution"
        fi
        
    - name: Test API endpoints
      run: |
        # 启动API服务器进行测试
        python run.py &
        SERVER_PID=$!
        sleep 10
        
        # 测试健康检查端点
        curl -f http://localhost:5000/health || exit 1
        curl -f http://localhost:5000/api/health || exit 1
        curl -f http://localhost:5000/api/ml-factor/health || exit 1
        
        # 停止服务器
        kill $SERVER_PID
        
    - name: Upload coverage reports
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build application
      run: |
        # 创建必要的目录
        mkdir -p logs reports models
        
        # 运行数据收集脚本验证
        python scripts/data_collector.py
        
        # 验证API可以启动
        timeout 30s python run.py &
        sleep 10
        
        # 验证API响应
        curl -f http://localhost:5000/health
        
    - name: Create deployment package
      run: |
        # 创建部署包
        tar -czf quantitative-analysis-${{ github.sha }}.tar.gz \
          --exclude='.git' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='.pytest_cache' \
          --exclude='htmlcov' \
          .
          
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: quantitative-analysis-${{ github.sha }}
        path: quantitative-analysis-${{ github.sha }}.tar.gz
        retention-days: 30
